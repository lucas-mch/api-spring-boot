## server
server.port=${port:8080}

## spring
# datasource
#spring.datasource.url=${SPRING_DATASOURCE_URL}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
#public database for testing connection
spring.datasource.url=jdbc:postgresql://hh-pgsql-public.ebi.ac.uk:5432/pfmegrnargs
spring.datasource.username=reader
spring.datasource.password=NWDMCE5xdipIjRrp
spring.datasource.driverClassName=org.postgresql.Driver

# liquibase
#momentaneamente desabilita o liquibase enquanto nao tenho o AWS DB.
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration
#spring.liquibase.change-log=liquibase/master.xml
#spring.liquibase.default-schema= application_owner
#spring.liquibase.liquibase-schema=public

# jpa
spring.jpa.properties.hibernate.default_schema=application_owner
spring.jpa.show-sql=false
spring.jpa.defer-datasource-initialization=false
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

##kafka
spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.enable-auto-commit=false
#spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.ack-mode=manual
#spring.kafka.consumer.group-id=api-lucas